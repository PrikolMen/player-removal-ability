CreateClientConVar( "cl_player_remover_kick", "0", true, true, "Kicks players on remove.", 0, 1 )
toolDistance = 4096 * 8
:TraceLine = util

-- ULib support ( I really don't like this )
if file.Exists( "ulib/shared/hook.lua", "LUA" )
    include( "ulib/shared/hook.lua" )

traceResult = {}
trace = {
    mask: bit.bor( CONTENTS_SOLID, CONTENTS_MOVEABLE, CONTENTS_MONSTER, CONTENTS_WINDOW, CONTENTS_DEBRIS, CONTENTS_GRATE, CONTENTS_AUX )
    output: traceResult
}

hook.Add( "CanTool", "Player Remover", ( _, toolName ) =>
    unless toolName == "remover" and @IsAdmin!
        return

    weapon = @GetActiveWeapon!
    unless weapon and weapon\IsValid! and weapon\GetClass! == "gmod_tool"
        return

    @LagCompensation( true )

    trace.start = @EyePos!
	trace.endpos = trace.start + ( @GetAimVector! * toolDistance )
    trace.filter = @
	TraceLine( trace )

    @LagCompensation( false )

	unless traceResult.Hit
        return

    entity = traceResult.Entity
    unless entity\IsValid! and entity\IsPlayer! and entity\Alive!
        return

    if entity\GetNoDraw! or entity\IsDormant!
        return

    weapon\DoShootEffect( traceResult.HitPos, traceResult.HitNormal, entity, traceResult.PhysicsBone, IsFirstTimePredicted! )

    effectData = EffectData!
    effectData\SetOrigin( entity\GetPos! )
    effectData\SetEntity( entity )
    util.Effect( "entity_remove", effectData, true, true )

    return false

PRE_HOOK_RETURN or HOOK_MONITOR_HIGH )
